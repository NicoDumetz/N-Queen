README: N-Queen

The N-Queen problem involves placing N chess queens on an N×N chessboard so that no two queens threaten each other. This README provides an overview of the count_valid_queens_placements function implemented in C to count the number of valid placements of N queens on an N×N chessboard.
Overview

    Objective:
    Implement a function to count the number of valid placements of N queens on an N×N chessboard without threatening each other.

    File:
    count_valid_queens_placements.c

Implementation

The implementation consists of three main functions:

    verify:
    This function verifies whether a queen can be placed at a specific row and column without threatening other queens already placed on the board.

    queen_placement:
    This function recursively tries to place queens on the chessboard column by column, ensuring that each placement is valid according to the verify function.

    count_valid_queens_placements:
    This function initializes an array to store the positions of queens on the chessboard and then calls the queen_placement function to count the total number of valid queen placements for a given N.

Usage

To use the count_valid_queens_placements function, include the count_valid_queens_placements.c file in your C project.

int main(void) {
    int n = 8; // Example: N = 8
    int count = count_valid_queens_placements(n);
    printf("Number of valid queen placements for %d queens: %d\n", n, count);
    return 0;
}

Directory Structure

N-Queen/
│
├── count_valid_queens_placements.c
└── README.md

Contributing

Contributions to the project are welcome! Feel free to open an issue or submit a pull request on the project's repository.
Author

Nicolas Dumetz
